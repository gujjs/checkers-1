var CIRCLE_PER_ROW = 4;
var ROW = 3;
var SQUARE_NUM = 8;
var SQUARE_WIDTH = getWidth() / SQUARE_NUM;
var SQUARE_HEIGHT = SQUARE_WIDTH;
var CIRCLE_OFFSET = SQUARE_WIDTH / 10;
var RADIUS = SQUARE_WIDTH / 2 - CIRCLE_OFFSET;

function start() {
    board();
    checkers();
}

function board() { //(ეს ფუნქცია დახატავს boardს რომელზეც იქნება შავ-თეთრი კვადრატები)

    var square_CIRCLE_NUMcolor;
    var bw = 0;
    var square_color;
    
    for( var i = 0; i < 8; i++ ){
    
    var squareY = i * SQUARE_HEIGHT;
    bw = i%2;
        
        for( var b = 0; b < SQUARE_NUM; b++ ){
            var squareX = b * SQUARE_WIDTH;
            if ( b%2 == bw ){
                square_color = Color.gray; 
            }else{
                square_color = Color.black;
            }
            drawSquare(squareX, squareY, square_color);

        }
    
    }

}
function drawSquare(x, y, color){
    var square = new Rectangle(SQUARE_WIDTH, SQUARE_HEIGHT);
    square.setPosition(x,y);
    square.setColor(color);
    add(square);
}

function checkers(){
    var circleY;
    
    for(var a = 0; a < ROW; a++){
        circleY = SQUARE_WIDTH / 2 + 2 * RADIUS * a + CIRCLE_OFFSET * 2 * a;
        for(var c = 0; c < CIRCLE_PER_ROW; c++){
            if (a % 2 == 0){
                var circleX = SQUARE_WIDTH*1.5 + c * SQUARE_WIDTH * 2;
            }else{
                var circleX = SQUARE_WIDTH*0.5 + c * SQUARE_WIDTH * 2;
            }
            drawCircle(circleX, circleY, Color.white);
        
   
        }
    }
    
} //(ეს ფუნქცია შექმნის 12 შავ და 12 თეთრ დამკის ქვას, რომელიც იქნება თითოეული მოთამაშის ობიექტი)

function drawCircle(x, y, color){
    var circle = new Circle(RADIUS);
    circle.setPosition(x,y);
    circle.setColor(color);
    add(circle);
}


//selectCheckers() //(ეს ფუნქცია აირჩევს მოთამაშის მიერ არჩეულ სათამაშო ქვას)

//checkersPath() //(ეს ფუნქცია მოთამაშეს უჩვენებს სად შეუძლია მის არჩეულ ქვას გადაადგილება, ასევე თუ არსებობს მოწინააღმდეგის ქვა აჩვენებს მოთამაშეს ქვის მოკვლის შესაძლებლობას)

//moveCheckers() //(ეს ფუნქცია გადაადგილებს მოთამაშის მიერ არჩეულ ქვას შესაბამის ადგილას)

//killCheckers() //თუ მოთამაშე გადაწყვეტს მოწინააღმეგის ფიგურის მოკვლას მაშინ გამოძახებული იქნება ეს ფუნქცია, ფუნქცია წაშლის მოწინააღმდეგის ქვას და გადაადგილებს მოთამაშის ქვას შესაბამის ადგილას, ასევე მოუმატებს მოთამაშეს ერთ ქულას)

//function checkWin() } //(ეს ფუნქცია შეამოწმებს რომელიმე მხარეს თუ აქვს 12 ქულა და თუ ეს დადასტურდება , შესაბამის შემთხვევაში მოთამაშეს გამოცხადებს გამარჯვებულად და დაასრულებს თამაშს)

//{
